% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/nmfExperiment-class_lite.R,
%   R/integrativeNMF-class.R, R/joinNMF-class.R
\docType{methods}
\name{compute_SignatureFeatures}
\alias{compute_SignatureFeatures}
\alias{compute_SignatureFeatures,ButchR_NMF-method}
\alias{compute_SignatureFeatures,ANY-method}
\alias{#'}
\alias{@param}
\alias{x}
\alias{an}
\alias{object}
\alias{of}
\alias{class}
\alias{ButchR_NMF.}
\alias{compute_SignatureFeatures,integrative_NMF-method}
\alias{compute_SignatureFeatures,ButchR_joinNMF-method}
\title{Compute Signature Features
Performs feature extraction for all
factorization ranks > 2.
Returns an nmfExperiment object with computed signature features}
\usage{
compute_SignatureFeatures(x)

\S4method{compute_SignatureFeatures}{ButchR_NMF}(x)

\S4method{compute_SignatureFeatures}{integrative_NMF}(x)

\S4method{compute_SignatureFeatures}{ButchR_joinNMF}(x)
}
\arguments{
\item{x}{An object of class ButchR_joinNMF.}
}
\value{
the same type of input object with computed signature features.
}
\description{
A K-means with k=2 is run over all rows of the W matrices.
Resulting in a binary matrix for every factorization rank,
with features in the rows and samples in the columns,
in which 1 means that the features is contributing to the signature,
and 0 it does not.
The extraction of Signature Specific Features is not supported for k = 2
}
\examples{
\dontrun{
data("leukemia")
nmf_exp <- runNMFtensor_lite(leukemia$matrix, ranks = 3,
                             method = "NMF",
                             n_initializations = 2,
                             extract_features = FALSE)
nmf_exp <- compute_SignatureFeatures(nmf_exp)
SignatureSpecificFeatures(nmf_exp, k = 3)
SignatureSpecificFeatures(nmf_exp, k = 3, return_all_features = TRUE)
}
\dontrun{
data("leukemia")
nmf_exp <- runNMFtensor_lite(leukemia$matrix, ranks = 3,
                             method = "NMF",
                             n_initializations = 2,
                             extract_features = FALSE)
nmf_exp <- compute_SignatureFeatures(nmf_exp)
SignatureSpecificFeatures(nmf_exp, k = 3)
SignatureSpecificFeatures(nmf_exp, k = 3, return_all_features = TRUE)
}
\dontrun{
norm_mat_list <- list(a = matrix(abs(rnorm(1000)), ncol = 10),
                      b = matrix(abs(rnorm(1000)), ncol = 10))
inmf_exp <- run_iNMF_tensor(norm_mat_list,
                            ranks = 2:5,
                            n_initializations     = 10,
                            iterations            = 10^4,
                            convergence_threshold = 40,
                            extract_features = FALSE)
inmf_exp <- compute_SignatureFeatures(inmf_exp)
SignatureSpecificFeatures(inmf_exp, k = 3)
SignatureSpecificFeatures(inmf_exp, k = 3, return_all_features = TRUE)
}
\dontrun{
norm_mat_list <- list(a = matrix(abs(rnorm(1000)), ncol = 10),
                      b = matrix(abs(rnorm(1000)), ncol = 10))
inmf_exp <- run_joinNMF_tensor(norm_mat_list,
                            ranks = 2:5,
                            n_initializations     = 10,
                            iterations            = 10^4,
                            convergence_threshold = 40,
                            extract_features = FALSE)
inmf_exp <- compute_SignatureFeatures(inmf_exp)
SignatureSpecificFeatures(inmf_exp, k = 3)
SignatureSpecificFeatures(inmf_exp, k = 3, return_all_features = TRUE)
}
}
