% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrativeNMF_functions.R
\name{run_iNMF_tensor}
\alias{run_iNMF_tensor}
\title{Integrative NMF}
\usage{
run_iNMF_tensor(
  matrix_list,
  ranks = 2,
  n_initializations = 10,
  iterations = 10^4,
  convergence_threshold = 40,
  Sp = 0,
  lamb = 10,
  extract_features = FALSE
)
}
\arguments{
\item{matrix_list}{List of non-negative matrices}

\item{ranks}{numeric vector with ranks to factorize}

\item{n_initializations}{Number of initializations to evaluate}

\item{iterations}{Maximum number of iterations to run for every initialization}

\item{convergence_threshold}{The factorization stops,
if the convergence test is constant for this number of iterations}
}
\value{
A integrative_NMF object,
containing a integrative H matrix and one W matrix for each input matrix
}
\description{
Computes integrative NMF on tensorflow using the reticulate framework,
uses a list of non-negative matrices as input
}
\examples{
\dontrun{
inmf_exp <- run_iNMF_tensor(list(a = matrix(1:1000, ncol = 10),
                                    b = matrix(1:1000, ncol = 10)),
                               ranks = 2:5,
                               n_initializations     = 10,
                               iterations            = 10^4,
                               convergence_threshold = 40)
inmf_exp
}
}
