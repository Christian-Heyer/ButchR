% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/nmfExperiment-class_lite.R,
%   R/integrativeNMF-class.R, R/joinNMF-class.R
\docType{methods}
\name{SignatureSpecificFeatures}
\alias{SignatureSpecificFeatures}
\alias{SignatureSpecificFeatures,ButchR_NMF-method}
\alias{SignatureSpecificFeatures,ANY-method}
\alias{SignatureSpecificFeatures,integrative_NMF-method}
\alias{SignatureSpecificFeatures,ButchR_joinNMF-method}
\title{Signature Specific Features}
\usage{
SignatureSpecificFeatures(x, k = NULL, return_all_features = FALSE, ...)

\S4method{SignatureSpecificFeatures}{ButchR_NMF}(x, k = NULL, return_all_features = FALSE, ...)

\S4method{SignatureSpecificFeatures}{integrative_NMF}(
  x,
  k = NULL,
  return_all_features = FALSE,
  view_id = NULL,
  ...
)

\S4method{SignatureSpecificFeatures}{ButchR_joinNMF}(
  x,
  k = NULL,
  return_all_features = FALSE,
  view_id = NULL,
  ...
)
}
\arguments{
\item{x}{an object of type ButchR_NMF, ButchR_joinNMF, or
ButchR_integrativeNMF.}

\item{k}{numeric  - factorization rank}

\item{return_all_features}{logical indicating whether to return a binary
matrix with the same dimension as the selected factorization rank.
Were a 1 is assigned to those features contributing towards a signature and
a 0 to those that do not show a significant contribution.}

\item{...}{additional parameters.}

\item{view_id}{character vector with views from which sigature specific
features will be extracted.}
}
\value{
list of signature specific features or binary matrices for all features
}
\description{
Returns the list of signatures specific features
for all factorization ranks or for the indicated rank,
if return_all_features = TRUE
returns a binary matrix for every factorization rank,
with features in the rows and samples in the columns,
in which 1 means that the features is contributing to the signature,
and 0 it does not.
The extraction of Signature Specific Features is not supported for k = 2
}
\examples{
data("leukemia")
nmf_exp <- runNMFtensor_lite(leukemia$matrix, ranks = 3,
                             method = "NMF",
                             n_initializations = 2,
                             extract_features = TRUE)
SignatureSpecificFeatures(nmf_exp)
SignatureSpecificFeatures(nmf_exp, k = 3)
SignatureSpecificFeatures(nmf_exp, k = 3, return_all_features = TRUE)
\dontrun{
# For ButchR_NMF objects:
SignatureSpecificFeatures(nmf_exp)
lapply(SignatureSpecificFeatures(nmf_exp), function(x) sapply(x, length))
SignatureSpecificFeatures(nmf_exp, k = 3)
SignatureSpecificFeatures(nmf_exp, k = 3, return_all_features = TRUE)
}
\dontrun{
# For integrative_NMF objects:
SignatureSpecificFeatures(inmf_exp)
lapply(SignatureSpecificFeatures(inmf_exp), function(view){
  sapply(view, function(x) sapply(x, length))
} )
lapply(SignatureSpecificFeatures(inmf_exp, k = 3), function(view){
  sapply(view, length)
})
SignatureSpecificFeatures(inmf_exp, k = 3, return_all_features = TRUE)
SignatureSpecificFeatures(inmf_exp, k = 3,
                          return_all_features = TRUE,
                          view_id = "atac")
SignatureSpecificFeatures(inmf_exp,
                          return_all_features = TRUE,
                          view_id = "atac")
}

\dontrun{
# For ButchR_joinNMF objects:
SignatureSpecificFeatures(jnmf_exp)
SignatureSpecificFeatures(jnmf_exp)
lapply(SignatureSpecificFeatures(jnmf_exp), function(view){
  sapply(view, function(x) sapply(x, length))
})
lapply(SignatureSpecificFeatures(jnmf_exp, k = 3), function(view){
  sapply(view, length)
})
SignatureSpecificFeatures(jnmf_exp, k = 3, return_all_features = TRUE)
SignatureSpecificFeatures(jnmf_exp, k = 3,
                          return_all_features = TRUE,
                          view_id = "atac")
SignatureSpecificFeatures(jnmf_exp,
                          return_all_features = TRUE,
                          view_id = "atac")
}
}
